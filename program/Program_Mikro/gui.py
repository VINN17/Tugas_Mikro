
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\ia088\OneDrive\Dokumen\2matkul_sem4\mikrokontroler\mikro\KRTech\program\Program_Mikro\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1280x800")
window.configure(bg = "#FFFFFF")

mode=0
state=0
log=0
state_1=None


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 800,
    width = 1280,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    640.0,
    400.0,
    image=image_image_1
)


# image_image_2 = PhotoImage(
#     file=image_2)
# image_2 = canvas.create_image(
#     639.0,
#     299.0,
#     image=file1
# )
        
# image_image_2 = PhotoImage(
#     file=relative_to_assets("image_2.png"))
# image_2 = canvas.create_image(
#     639.0,
#     299.0,
#     image=image_image_2
# )
# image_image_2 = PhotoImage(
#     file=relative_to_assets("image_2_3.png"))
# image_2 = canvas.create_image(
#     639.0,
#     299.0,
#     image=image_image_2
# )
image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    791.0,
    449.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    559.0,
    609.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    559.0,
    552.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    435.0,
    671.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    559.0,
    475.0,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    559.0,
    439.0,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    559.0,
    265.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    558.5,
    101.0,
    image=image_image_10
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    559.0,
    125.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    559.0,
    417.0,
    image=image_image_12
)

image_image_13_1 = PhotoImage(
    file=relative_to_assets("image_13_1.png"))
image_image_13_2 = PhotoImage(
    file=relative_to_assets("image_13_2.png"))
image_13 = canvas.create_image(
    411.0,
    210.0,
    image=image_image_13_1
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    619.0,
    670.0,
    image=image_image_14
)





canvas.create_text(
    470.0,
    198.0,
    anchor="nw",
    text="Status Pompa",
    fill="#5276AB",
    font=("Inter", 20 * -1)
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    558.0,
    328.0,
    image=image_image_15
)

canvas.create_text(
    411.0,
    288.0,
    anchor="nw",
    text="Flow Meter",
    fill="#5276AB",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    411.0,
    344.0,
    anchor="nw",
    text="Pressure",
    fill="#5276AB",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    459.0,
    112.0,
    anchor="nw",
    text="STATUS SYSTEM",
    fill="#5276AB",
    font=("Inter", 24 * -1)
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    633.0,
    299.0,
    image=image_image_16
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    633.0,
    355.0,
    image=image_image_17
)

canvas.create_text(
    309.0,
    20.0,
    anchor="nw",
    text="BUILDING AUTOMATION SYSTEM",
    fill="#5C5C5C",
    font=("Inter", 40 * -1)
)




def tombol_data_log():
    global log
    if (log & 1) != 0:
        log = 0         
        print("Bit Log di-clear")
    else:
        log |= 1          
        print("Bit Log di-set")
    print(f"Nilai log sekarang: {log}")
    logic_log(log)
    
def tombol_data_grafik():
    global log
    if (log & 2) != 0:
        log = 0         
        print("Bit Grafik di-clear")
    else:
        log |= 2         
        print("Bit Grafik di-set")
    print(f"Nilai log sekarang: {log}")
    logic_log(log)
    
# def tombol_mode_auto():
#     global mode
#     if (mode & 1) != 0:
#         mode = 0         
#         print("Bit Mode di-clear")
#     else:
#         mode = 1        
#         print("Bit Mode di-set")
#     print(f"Nilai mode sekarang: {mode}")
def tombol_mode_auto():
    global mode
    if mode == 0:
        mode = 1        
        # print("Bit Mode di-clear")
    # else:
    #     mode = 1        
    #     print("Bit Mode di-set")
    print(f"Nilai mode sekarang: {mode}")
def tombol_mode_manual():
    global mode
    if mode == 1:
        mode = 0         
        # print("Bit Mode di-clear")
    # else:
    #     mode = 2        
    #     print("Bit Mode di-set")
    print(f"Nilai mode sekarang: {mode}")

# Fungsi saat tombol Start ditekan
def tombol_state_on():
    global state, state_1
    state_1 = 1  # simpan status tombol
    if mode == 0:  # jika bukan mode auto (berarti manual)
        print("Mode: Manual")
        if state == 0:
            state = 1
            print("Bit State di-set")
        print(f"Nilai state sekarang: {state}")

# Fungsi saat tombol Stop ditekan
def tombol_state_off():
    global state, state_1
    state_1 = 0  # simpan status tombol
    if mode != 1:
        print("Mode: Manual")
        if state == 1:
            state = 0
            print("Bit State di-clear")
        print(f"Nilai state sekarang: {state}")
    
def status_pompa(is_started):
    if is_started:
        canvas.itemconfig(image_13, image=image_image_13_2)
    else:
        canvas.itemconfig(image_13, image=image_image_13_1)
        

    
# if mode != 1:
#     print("Mode: Manual")
#     if state_1 == 1:
#         # global state
#         if (state & 1) != 0:
#             state = 0         
#             print("Bit State di-clear")
#         else:
#             state = 1        
#             print("Bit State di-set")
#         print(f"Nilai state sekarang: {state}")
#     else:
#         # global state
#         if (state & 2) != 0:
#             state = 0         
#             print("Bit State di-clear")
#         else:
#             state = 2        
#             print("Bit State di-set")
#         print(f"Nilai state sekarang: {state}")
#     # tombol_state_on()
#     # tombol_state_off()



button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    # mode=True,
    command=lambda: [print("Mode: Auto clicked"), tombol_mode_auto(),toggle_PB(False),],
    relief="flat"
)
button_1.place(
    x=406.0,
    y=651.0,
    width=62.0,
    height=41.0
)


button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    # mode=False,
    command=lambda: [print("Mode: Manual clicked"),tombol_mode_manual(),toggle_PB(True)],
    relief="flat"
)
button_3.place(
    x=521.0,
    y=651.0,
    width=60.0,
    height=40.0
)
# --- IMAGE ASSETS ---
img_start_default = PhotoImage(file=relative_to_assets("button_2.png"))
img_stop_default = PhotoImage(file=relative_to_assets("button_4.png"))

img_start_pressed = PhotoImage(file=relative_to_assets("button_2_1.png"))
img_stop_pressed = PhotoImage(file=relative_to_assets("button_4_1.png"))
button_2 = None
button_4 = None
# --- TOGGLE FUNCTION ---
def toggle_PB(is_pressed):
    global button_2, button_4
    if is_pressed:
        # print("Tombol STOP aktif")
        button_2.config(image=img_start_pressed)
        button_4.config(image=img_stop_pressed)
        # status_pompa(1)  # Set status pompa ke ON
    else:
        # print("Tombol START aktif")
        button_2.config(image=img_start_default)
        button_4.config(image=img_stop_default)
        # status_pompa(0)  # Set status pompa ke OFF
    
button_2 = Button(
    image=img_start_default,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [print("Manual: Start clicked"), tombol_state_on(),status_pompa(state)],
    relief="flat"
)
button_2.place(x=602.0, y=646.0, width=50.0, height=51.0)

button_4 = Button(
    image=img_stop_default,
    borderwidth=0,
    highlightthickness=0, 
    command=lambda: [print("Manual: Stop clicked"), tombol_state_off(),status_pompa(state)],
    relief="flat"
)
button_4.place(x=670.0, y=646.0, width=50.0, height=51.0)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [print("Data: Log clicked"),  tombol_data_log()],
    relief="flat"
)
button_5.place(
    x=804.0,
    y=191.0,
    width=37.0,
    height=190.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [print("Data: Grafik clicked"), tombol_data_grafik()],
    relief="flat"
)
button_6.place(
    x=804.0,
    y=433.0,
    width=37.0,
    height=283.0
)
# --- LOGIC FUNCTION ---
def logic_log(x):
    global file1
    if x == 0:
        print("Log: 0")
        file1 = PhotoImage(file=relative_to_assets("image_2.png"))
        xg=0
    elif x == 1:
        print("Log: 1")
        xg=-100
        file1 = PhotoImage(file=relative_to_assets("image_2_1.png"))
    elif x == 2:
        print("Log: 2")
        xg=110
        file1 = PhotoImage(file=relative_to_assets("image_2_2.png"))
    elif x == 3:
        print("Log: 3")
        xg=0
        file1 = PhotoImage(file=relative_to_assets("image_2_3.png"))
    else:
        return
    image_2= canvas.create_image(639.0+xg, 299.0, image=file1)
    canvas.image = file1  # Keep reference to avoid garbage collection
    canvas.tag_lower(image_2,image_3 )  # Send the new image to the back

logic_log(0)
window.resizable(False, False)
window.mainloop()
